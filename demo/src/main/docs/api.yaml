openapi: "3.0.0"
info:
  version: 1.0.0
  title: User API

paths:
  /users:
    get:
      summary: List all users
      operationId: listUsers
      tags:
        - users
      responses:
        '200':
          description: List all users in database
          headers:
            x-next:
              description: A link to the next page of responses
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Users"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /user :
    post:
      summary: Create a user
      operationId: createUser
      tags:
        - user
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                mail:
                  type: string
      responses:
        '201':
          description: Null response
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /user/{userId}:
    get:
      summary: Get a user based on his ID
      operationId: GetUser
      tags:
        - user
      parameters:
        - name: userId
          in: path
          required: true
          description: Name of the user
          schema:
            type: string
      responses:
        '200':
          description: Get one user
          headers:
            x-next:
              description: A link to the next page of responses
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    delete:
      summary: Delete a user based on his ID
      operationId: DeleteUser
      tags:
        - user
      parameters:
        - name: userId
          in: path
          required: true
          description: Name of the user
          schema:
            type: string
      responses:
        '200':
          description: Get one user
          headers:
            x-next:
              description: A link to the next page of responses
              schema:
                type: string
          content:
            application/json:
              schema:
                type: string
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    put:
      summary: Update a user based on his ID
      operationId: PutUser
      tags:
        - user
      parameters:
        - name: userId
          in: path
          required: true
          description: Name of the user
          schema:
            type: string
      responses:
        '200':
          description: Get one user
          headers:
            x-next:
              description: A link to the next page of responses
              schema:
                type: string
          content:
            application/json:
              schema:
                type: string
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

components:
  schemas:
    User:
      type: object
      required:
        - id
        - name
        - email
        - age
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        email:
          type: string
        age:
          type: integer
    Users:
      type: array
      items:
        $ref: "#/components/schemas/User"
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
